{"version":3,"sources":["athens/lib/dom/attributes.cljc"],"mappings":";;;AAKA,AAAA,AAAMA,AACHC,AAAMC;AADT,AAEE,AAAMC,AAAU,AAAI,AAASD,AACXA,AACA,AAAA,AAACE,AAAwBF;AAF3C,AAGE,AAAA,AAACG,AAAOJ,AAAa,AAAKK;AAAL,AACE,AAAIA;AACF,AAAA,AAAKA,AAAMH;;AACXA;;;;AAG7B,AAAA,AAAA,AAAAI,AAAMM;AAAN,AAAA,AAAAL,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAAF;;;AAAA,AAAA,AAAA,AAAA,AAAME,AACDX;AADL,AAEE;;;AAAA,AACM,AAAA,AAACe;;AACHhB;AAFJ,AAGG,AAACD,AAAkBC,AAAMC;;AADxBD;;;;;AAAAA;;;;;;;;;;AAJN,AAAA,AAAA,AAAMY;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAE,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAF;;;AAAA,AAQA,AAAA,AAAA,AAAAP,AAAMW;AAAN,AAAA,AAAAV,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAA,AAAA,AAAAE;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAA,AAAAI,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAU,AAAAP;;;AAAA,AAAA,AAAA,AAAA,AAAMO,AACDE;AADL,AAEE,AAACC,AAAO,AAAKC,AAAIC;AAAT,AACE,AACE,AAACC,AAAID;AACL,AAACA,AAAAA,AAAAA,AAAUD,AAAAA;;AAFb,AAIE,AAACG,AAAKF;AACN,AAACG,AAAU,AAAKC,AAAKC,AAAUC;AAApB,AACE,AAAAC,AAAMF;AAANE,AAAA,AAAA,AAAAA,AAAAC,AAAA,AAAAD,AAAA;AAAA,AAAA,AAAAA;AAAA;AACS,AAAC9B,AAAkB2B,AAAKE;;;;AAI/B,AAACG,AAAML,AAAKC,AAAUC;;;AAC1BP,AACAC;;AAbb,AAgBE,AAAO,AAAA,AAAA,AAACU,AAAQ,AAAyCV;;;;AAjBrE,AAkBWH;;;AApBb,AAAA,AAAA,AAAMF;;AAAN;AAAA,AAAA,AAAA,AAAAC,AAAMD;AAAN,AAAA,AAAAH,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAC,AAAAG;;;AAAA,AAuBA","names":["athens.lib.dom.attributes/merge-dom-classes","attrs","dom-classes","class-str","clojure.string.join.cljs$core$IFn$_invoke$arity$2","cljs.core.update.cljs$core$IFn$_invoke$arity$3","s","var_args","args__4795__auto__","len__4789__auto__","i__4790__auto__","argseq__4796__auto__","cljs.core/IndexedSeq","athens.lib.dom.attributes/with-classes","seq79806","self__4777__auto__","cljs.core/seq","athens$lib$dom$attributes$f.cljs$core$IFn$_invoke$arity$1","athens.lib.dom.attributes/with-attributes","seq79807","attributes","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","acc","map-or-fn","cljs.core/fn?","cljs.core/map?","cljs.core/reduce-kv","acc0","attribute","v","G__79808","cljs.core/Keyword","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2"],"sourcesContent":["(ns athens.lib.dom.attributes\r\n  (:require\r\n    [clojure.string]))\r\n\r\n\r\n(defn merge-dom-classes\r\n  [attrs dom-classes]\r\n  (let [class-str (if (string? dom-classes)\r\n                    dom-classes\r\n                    (clojure.string/join \" \" dom-classes))]\r\n    (update attrs :class (fn [s]\r\n                           (if s\r\n                             (str s \" \" class-str)\r\n                             class-str)))))\r\n\r\n\r\n(defn with-classes\r\n  [& dom-classes]\r\n  (fn f\r\n    ([] (f nil))\r\n    ([attrs]\r\n     (merge-dom-classes attrs dom-classes))))\r\n\r\n\r\n(defn with-attributes\r\n  [& attributes]\r\n  (reduce (fn [acc map-or-fn]\r\n            (cond\r\n              (fn? map-or-fn)\r\n              (map-or-fn acc)\r\n\r\n              (map? map-or-fn)\r\n              (reduce-kv (fn [acc0 attribute v]\r\n                           (case attribute\r\n                             :class (merge-dom-classes acc0 v)\r\n\r\n                             ;; Potentially override whatever is there\r\n                             ;;  (e.g. we cannot merge on-change handlers)\r\n                             (assoc acc0 attribute v)))\r\n                         acc\r\n                         map-or-fn)\r\n\r\n              :else\r\n              (throw (ex-info (str \"Expected map or function\") {:value map-or-fn}))))\r\n          {} attributes))\r\n\r\n\r\n(comment\r\n\r\n  (with-attributes\r\n    {:class \"foo bar\"}\r\n    {:class \"baz poo\"}\r\n    {:style {:color :red}}\r\n    )\r\n  )\r\n"]}