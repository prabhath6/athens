{"version":3,"sources":["athens/devcards/spinner.cljs"],"mappings":";;;;;;;;AAYA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACA;AASD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACA;AAOD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACA;AAOD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAcL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC,AAIM,AAAA,AAAoB,AAAA,AAACC,AACX,AAAA,AAACA;AAItB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC,AACkB,AAAA,AAAeC;AAMtC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAYL,AAAA,AAAAC,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AACWM;AADX,AAAAF,AAAAJ,AAAA,AACmBO;AADnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEQ,AAACC,AAAU,AAACC,AAAMhB,AAAcc,AAC/B,AAACC,AAAUd,AACV,AAACc,AAAUZ,AAAuB,AAAAc,AAAIJ;AAAJ,AAAA,AAAAI;AAAAA;;AAAA;;;;AAG5C;;;AAAA,AAAAC,AAAA,AAAA,AAAaC;AAGb,AAAA,AAAeC;AAAf,AAAA,AAAA,AAAA,AAEQ,AAACL,AAAUV,AAChB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMc,AACOA,AAAYA,AACxBP;;;AAMJ,AAIA","names":["stylefy.core.keyframes.cljs$core$IFn$_invoke$arity$variadic","athens.devcards.spinner/spinner-style","athens.devcards.spinner/spinner-progress-style","athens.style.color.cljs$core$IFn$_invoke$arity$1","athens.devcards.spinner/spinner-message-style","athens.style/OPACITIES","athens.devcards.spinner/initial-spinner-container","p__74249","map__74250","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","athens.devcards.spinner/spinner-component","message","style","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$1","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","or__4185__auto__","js/goog.define","athens.devcards.spinner/COMMIT_URL","athens.devcards.spinner/initial-spinner-component"],"sourcesContent":["(ns athens.devcards.spinner\r\n  (:require\r\n    [athens.db]\r\n    [athens.style :refer [color OPACITIES]]\r\n    [cljsjs.react]\r\n    [cljsjs.react.dom]\r\n    [devcards.core :refer-macros [defcard-rg]]\r\n    [stylefy.core :as stylefy :refer [use-style]]))\r\n\r\n\r\n;;; Styles\r\n\r\n(stylefy/keyframes \"appear-and-drop\"\r\n                   [:from\r\n                    {:transform \"translateY(-40%)\"\r\n                     :opacity \"0\"}]\r\n                   [:to\r\n                    {:transform \"translateY(0)\"\r\n                     :opacity \"var(--anim-opacity-end, 1)\"}])\r\n\r\n\r\n(stylefy/keyframes \"appear\"\r\n                   [:from\r\n                    {:opacity \"0\"}]\r\n                   [:to\r\n                    {:opacity \"var(--anim-opacity-end, 1)\"}])\r\n\r\n\r\n(stylefy/keyframes \"spinning\"\r\n                   [:from\r\n                    {:transform \"rotate(0deg)\"}]\r\n                   [:to\r\n                    {:transform \"rotate(1079deg)\"}])\r\n\r\n\r\n(def spinner-style\r\n  {:--anim-opacity-end \"1\"\r\n   :width \"10em\"\r\n   :height \"10em\"\r\n   :display \"grid\"\r\n   :align-self \"center\"\r\n   :margin \"auto\"\r\n   :text-align \"center\"\r\n   :place-items \"center\"\r\n   :animation \"appear 0.5s ease\"\r\n   :place-content \"center\"\r\n   :grid-gap \"0.5rem\"})\r\n\r\n\r\n(def spinner-progress-style\r\n  {:width \"3em\"\r\n   :height \"3em\"\r\n   :border-radius \"1000px\"\r\n   :border (str \"1.5px solid \" (color :panel-color))\r\n   :border-top-color (color :link-color)\r\n   :animation \"spinning 3s linear infinite\"})\r\n\r\n\r\n(def spinner-message-style\r\n  {:--anim-opacity-end (:opacity-high OPACITIES)\r\n   :animation \"appear-and-drop 1s 0.75s ease\"\r\n   :font-size \"14px\"\r\n   :animation-fill-mode \"both\"})\r\n\r\n\r\n(def initial-spinner-container\r\n  {:margin-top      \"50vh\"\r\n   :transform       \"translateY(-50%)\"\r\n   :display         \"flex\"\r\n   :flex-direction  \"column\"\r\n   :justify-content \"center\"\r\n   :align-items     \"center\"})\r\n\r\n\r\n;;; Components\r\n\r\n\r\n(defn spinner-component\r\n  [{:keys [message style]}]\r\n  [:div (use-style (merge spinner-style style))\r\n   [:div (use-style spinner-progress-style)]\r\n   [:span (use-style spinner-message-style) (or message \"Loading...\")]])\r\n\r\n\r\n(goog-define COMMIT_URL false)\r\n\r\n\r\n(defn ^:export initial-spinner-component\r\n  []\r\n  [:div (use-style initial-spinner-container)\r\n   (when COMMIT_URL\r\n     [:a {:href COMMIT_URL} COMMIT_URL])\r\n   [spinner-component]])\r\n\r\n\r\n;;; Devcards\r\n\r\n\r\n(defcard-rg Default-Spinner\r\n  [spinner-component (use-style spinner-style)])\r\n\r\n\r\n(defcard-rg Spinner-with-custom-message\r\n  [spinner-component (use-style spinner-style {:message \"Custom Loading Message\"})])\r\n\r\n"]}