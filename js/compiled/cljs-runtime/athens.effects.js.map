{"version":3,"sources":["athens/effects.cljs"],"mappings":"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","names":["G__74018","G__74019","re-frame.core/reg-fx","datoms","cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic","cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1","posh.reagent/transact!","athens.db/dsdb","cljs.core/println","G__74020","G__74021","new-db","datascript.core.reset_conn_BANG_.cljs$core$IFn$_invoke$arity$2","G__74025","G__74026","_","js/localStorage.setItem","cljs.core/deref","datascript.transit/write-transit-str","G__74028","G__74029","p__74030","map__74031","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","url","method","opts","on-success","on-failure","c__55910__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__55911__auto__","switch__55731__auto__","state_74082","state_val_74083","inst_74048","inst_74050","inst_74051","cljs.core/not","statearr-74087","statearr-74088","statearr-74089","G__74090","cljs.core/Keyword","statearr-74091","statearr-74092","statearr-74093","statearr-74096","js/Error","statearr-74098","statearr-74099","inst_74062","statearr-74100","statearr-74101","inst_74072","inst_74074","inst_74075","statearr-74102","statearr-74103","statearr-74106","inst_74044","inst_74045","cljs.core.async.impl.ioc-helpers/take!","inst_74080","cljs.core.async.impl.ioc-helpers/return-chan","statearr-74108","statearr-74111","statearr-74113","inst_74067","statearr-74115","inst_74070","inst_74071","statearr-74116","statearr-74117","statearr-74118","inst_74065","statearr-74119","statearr-74120","inst_74077","inst_74078","statearr-74122","inst_74054","inst_74055","inst_74056","inst_74057","inst_74058","statearr-74126","statearr-74127","statearr-74128","state-machine__55732__auto__","ret-value__55733__auto__","result__55734__auto__","cljs.core/keyword-identical?","e74130","js/Object","ex__55735__auto__","statearr-74131","cljs.core.async.impl.ioc-helpers/process-exception","state__55912__auto__","statearr-74133","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs-http.client/post","cljs-http.client/get","cljs-http.client/put","cljs-http.client/delete","re-frame.core/dispatch","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","G__74134","G__74135","timers","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","p__74138","map__74139","action","id","event","wait","G__74145","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","js/setTimeout","js/clearTimeout","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/dissoc"],"sourcesContent":["(ns athens.effects\r\n  (:require\r\n    [athens.db :as db]\r\n    [cljs-http.client :as http]\r\n    [cljs.core.async :refer [go <!]]\r\n    [cljs.pprint :refer [pprint]]\r\n    [datascript.core :as d]\r\n    [datascript.transit :as dt]\r\n    [day8.re-frame.async-flow-fx]\r\n    [posh.reagent :refer [transact!]]\r\n    [re-frame.core :refer [dispatch reg-fx]]))\r\n\r\n\r\n;;; Effects\r\n\r\n\r\n(reg-fx\r\n  :transact\r\n  (fn [datoms]\r\n    (prn \"INPUTS\")\r\n    (pprint datoms)\r\n    (prn \"OUTPUTS\")\r\n    (pprint (:tx-data (transact! db/dsdb datoms)))\r\n    (println)))\r\n\r\n\r\n(reg-fx\r\n  :reset-conn\r\n  (fn [new-db]\r\n    (d/reset-conn! db/dsdb new-db)))\r\n\r\n\r\n(reg-fx\r\n  :set-local-storage-db\r\n  (fn [_]\r\n    (js/localStorage.setItem \"datascript/DB\" (dt/write-transit-str @db/dsdb))))\r\n\r\n\r\n(reg-fx\r\n  :http\r\n  (fn [{:keys [url method opts on-success on-failure]}]\r\n    (go\r\n      (let [http-fn (case method\r\n                      :post http/post :get http/get\r\n                      :put http/put :delete http/delete)\r\n            res     (<! (http-fn url opts))\r\n            {:keys [success body] :as all} res]\r\n        (if success\r\n          (dispatch (conj on-success body))\r\n          (dispatch (conj on-failure all)))))))\r\n\r\n\r\n(reg-fx\r\n  :timeout\r\n  (let [timers (atom {})]\r\n    (fn [{:keys [action id event wait]}]\r\n      (case action\r\n        :start (swap! timers assoc id (js/setTimeout #(dispatch event) wait))\r\n        :clear (do (js/clearTimeout (get @timers id))\r\n                   (swap! timers dissoc id))))))\r\n\r\n"]}