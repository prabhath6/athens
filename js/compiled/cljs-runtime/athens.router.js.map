{"version":3,"sources":["athens/router.cljs"],"mappings":"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","names":["G__79987","G__79988","re-frame.core/reg-sub","db","re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2","p__79989","vec__79990","seq__79991","cljs.core/seq","first__79992","cljs.core/first","cljs.core/next","_","route","p__79993","p__79994","map__79995","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","vec__79996","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","new-match","old-match","controllers","reitit.frontend.controllers/apply-controllers","node","G__80000","G__80001","G__80002","posh.reagent/pull","athens.db/dsdb","node-title","cljs.core/deref","page-title","or__4185__auto__","js/document","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","G__80005","G__80006","re-frame.core/reg-fx","day8.re-frame.tracing/is-trace-enabled?","+debux-dbg-opts+","debux.common.util/send-form!","opts__76526__auto__","result__76527__auto__","debux.common.util/send-trace!","e","e80007","reitit.frontend.easy/push-state","athens.router/routes","athens.router/router","reitit.frontend.router.cljs$core$IFn$_invoke$arity$2","reitit.coercion.spec/coercion","athens.router/on-navigate","G__80008","re-frame.core/dispatch","athens.router/navigate","page","G__80009","var_args","G__80011","athens.router/navigate-uid","js/Error","uid","G__80012","shift","G__80013","athens.router.navigate_uid.cljs$core$IFn$_invoke$arity$1","athens.router/init-routes!","cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic","reitit.frontend.easy/start!"],"sourcesContent":["(ns athens.router\r\n  (:require\r\n    [athens.db :as db]\r\n    #_[athens.views :as views]\r\n    [day8.re-frame.tracing :refer-macros [fn-traced]]\r\n    [posh.reagent :refer [pull]]\r\n    [re-frame.core :refer [#_subscribe dispatch reg-sub reg-event-fx reg-fx]]\r\n    [reitit.coercion.spec :as rss]\r\n    [reitit.frontend :as rfe]\r\n    [reitit.frontend.controllers :as rfc]\r\n    [reitit.frontend.easy :as rfee]))\r\n\r\n;; subs\r\n(reg-sub\r\n  :current-route\r\n  (fn [db]\r\n    (:current-route db)))\r\n\r\n;; events\r\n(reg-event-fx\r\n  :navigate\r\n  (fn [_ [_ & route]]\r\n    {:navigate! route}))\r\n\r\n\r\n(reg-event-fx\r\n  :navigated\r\n  (fn [{:keys [db]} [_ new-match]]\r\n    (let [old-match   (:current-route db)\r\n          controllers (rfc/apply-controllers (:controllers old-match) new-match)\r\n          node (pull db/dsdb '[*] [:block/uid (-> new-match :path-params :id)]) ;; TODO make the page title query work when zoomed in on a block\r\n          node-title (:node/title @node)\r\n          page-title (str (or node-title \"untitled\") \" \u2013 Athens\")]\r\n      (set! (.-title js/document) page-title) ;; TODO make this side effect explicit\r\n      {:db (-> db\r\n               (assoc :current-route (assoc new-match :controllers controllers))\r\n               (dissoc :merge-prompt))\r\n       :timeout {:action :clear\r\n                 :id :merge-prompt}})))\r\n\r\n\r\n;; effects\r\n\r\n(reg-fx\r\n  :navigate!\r\n  (fn-traced [route]\r\n             (apply rfee/push-state route)))\r\n\r\n;; router definition\r\n\r\n(def routes\r\n  [\"/\"\r\n   [\"\"      {:name :home}]\r\n   [\"about\" {:name :about}]\r\n   [\"pages\" {:name :pages}]\r\n   [\"page/:id\" {:name :page}]])\r\n\r\n\r\n(def router\r\n  (rfe/router\r\n    routes\r\n    {:data {:coercion rss/coercion}}))\r\n\r\n\r\n(defn on-navigate\r\n  [new-match]\r\n  (when new-match\r\n    (dispatch [:navigated new-match])))\r\n\r\n\r\n(defn navigate\r\n  [page]\r\n  (dispatch [:navigate page]))\r\n\r\n\r\n(defn navigate-uid\r\n  ([uid]\r\n   (dispatch [:navigate :page {:id uid}]))\r\n  ([uid e]\r\n   (let [shift (.. e -shiftKey)]\r\n     (if shift\r\n       (dispatch [:right-sidebar/open-item uid])\r\n       (navigate-uid uid)))))\r\n\r\n\r\n(defn init-routes!\r\n  []\r\n  (prn \"Initializing routes\")\r\n  (rfee/start!\r\n    router\r\n    on-navigate\r\n    {:use-fragment true}))\r\n"]}