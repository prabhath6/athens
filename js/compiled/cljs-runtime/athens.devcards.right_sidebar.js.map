{"version":3,"sources":["athens/devcards/right_sidebar.cljs"],"mappings":"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","names":["athens.devcards.right-sidebar/sidebar-width","stylefy.core.keyframes.cljs$core$IFn$_invoke$arity$variadic","athens.devcards.right-sidebar/sidebar-style","athens.style.color.cljs$core$IFn$_invoke$arity$2","athens.devcards.right-sidebar/sidebar-toggle-style","athens.style.color.cljs$core$IFn$_invoke$arity$1","garden.color/lighten","athens.devcards.right-sidebar/sidebar-content-style","athens.devcards.right-sidebar/sidebar-section-heading-style","athens.devcards.right-sidebar/sidebar-item-style","athens.devcards.right-sidebar/sidebar-item-toggle-style","athens.devcards.right-sidebar/sidebar-item-container-style","athens.devcards.right-sidebar/sidebar-item-heading-style","athens.style/OPACITIES","athens.devcards.right-sidebar/empty-message-style","athens.devcards.right-sidebar/empty-message","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$1","athens.devcards.right-sidebar/right-sidebar-el","open?","items","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$2","cljs.core/empty?","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","iter__4582__auto__","s__89967","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__89969","cljs.core/chunk-buffer","i__89968","vec__89970","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","map__89973","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__89966","cljs.core/chunk-rest","vec__89977","cljs.core/first","map__89980","cljs.core/cons","cljs.core/rest","uid","open","title","string","athens.devcards.buttons/button","G__89975","G__89982","re-frame.core/dispatch","js/module$node_modules$$material_ui$icons$index.ChevronRight","js/module$node_modules$$material_ui$icons$index.Description","js/module$node_modules$$material_ui$icons$index.FiberManualRecord","G__89976","G__89983","js/module$node_modules$$material_ui$icons$index.Close","athens.devcards.node-page/node-page-component","athens.devcards.block-page/block-page-component","G__89984","js/module$node_modules$$material_ui$icons$index.Add","athens.devcards.right-sidebar/right-sidebar-component","cljs.core/deref","G__89985","re-frame.core/subscribe","G__89986","cljs.core/chunk-first"],"sourcesContent":["(ns athens.devcards.right-sidebar\r\n  (:require\r\n    [\"@material-ui/icons\" :as mui-icons]\r\n    [athens.devcards.block-page :refer [block-page-component]]\r\n    [athens.devcards.buttons :refer [button button-primary]]\r\n    [athens.devcards.node-page :refer [node-page-component]]\r\n    [athens.style :refer [color OPACITIES]]\r\n    [cljsjs.react]\r\n    [cljsjs.react.dom]\r\n    [devcards.core :refer [defcard-rg]]\r\n    [garden.color :refer [lighten]]\r\n    [re-frame.core :refer [dispatch subscribe]]\r\n    [stylefy.core :as stylefy :refer [use-style]]))\r\n\r\n\r\n;;; Styles\r\n\r\n\r\n(def sidebar-width \"32vw\")\r\n\r\n\r\n(stylefy/keyframes \"content-appears\"\r\n                   [:from\r\n                    {:opacity \"0\"\r\n                     :width \"0\"\r\n                     :transform \"translateX(10%)\"}]\r\n                   [:to\r\n                    {:opacity \"1\"\r\n                     :width sidebar-width\r\n                     :transform \"translateX(0)\"}])\r\n\r\n\r\n(stylefy/keyframes \"content-disappears\"\r\n                   [:from\r\n                    {:opacity \"1\"\r\n                     :width sidebar-width\r\n                     :transform \"translateX(0)\"}]\r\n                   [:to\r\n                    {:opacity \"0\"\r\n                     :width \"0\"\r\n                     :transform \"translateX(10%)\"}])\r\n\r\n\r\n(def sidebar-style\r\n  {:justify-self \"stretch\"\r\n   :overflow \"auto\"\r\n   :flex \"0 0 auto\"\r\n   :display \"flex\"\r\n   :justify-content \"space-between\"\r\n   :transition \"opacity 0.5s ease\"\r\n   ::stylefy/manual [[:svg {:color (color :body-text-color :opacity-high)}]\r\n                     [:&.is-open {:border-left [[\"1px solid \" (color :panel-color :opacity-low)]]\r\n                                  :background-color (color :panel-color :opacity-low)}\r\n                      [:> [:div {:animation \"content-appears 0.15s\"\r\n                                 :animation-fill-mode \"both\"}]]]\r\n                     [:&.is-closed [:> [:div {:animation \"content-disappears 0.1s\"\r\n                                              :animation-fill-mode \"both\"}]]]]})\r\n\r\n\r\n(def sidebar-toggle-style\r\n  {:border-radius \"0\"\r\n   :flex-shrink \"0\"\r\n   :align-items \"flex-start\"\r\n   :padding \"80px 4px 0\"\r\n   :position \"relative\"\r\n   :z-index \"10\"\r\n   :box-shadow [[\"inset 1px 0 0 \" (color :panel-color)]]\r\n   ::stylefy/manual [[:& {:transition-duration \"0.15s\"}]\r\n                     [:&:hover {:background (lighten (color :panel-color) 5)}]\r\n                     [:&:focus :active {:outline \"none\"\r\n                                        :color \"inherit\"}]]})\r\n\r\n\r\n(def sidebar-content-style\r\n  {:display \"flex\"\r\n   :width sidebar-width\r\n   :opacity \"0\"\r\n   :animation-fill-mode \"both\"\r\n   :animation-timing-function \"ease-out\"\r\n   :flex-direction \"column\"\r\n   :overflow-y \"auto\"})\r\n\r\n\r\n(def sidebar-section-heading-style\r\n  {:font-size \"14px\"\r\n   :display \"flex\"\r\n   :flex-direction \"row\"\r\n   :align-items \"center\"\r\n   :min-height \"40px\"\r\n   :padding \"8px 16px 8px 24px\"\r\n   ::stylefy/manual [[:h1 {:font-size \"inherit\"\r\n                           :margin \"0 auto 0 0\"\r\n                           :line-height \"1\"\r\n                           :color (color :body-text-color :opacity-med)}]]})\r\n\r\n\r\n(def sidebar-item-style\r\n  {:display \"flex\"\r\n   :flex \"0 0 auto\"\r\n   :flex-direction \"column\"\r\n   :border-top [[\"1px solid\" (color :panel-color)]]})\r\n\r\n\r\n(def sidebar-item-toggle-style\r\n  {:margin \"auto 8px auto 0\"\r\n   :flex \"0 0 auto\"\r\n   :width \"28px\"\r\n   :height \"28px\"\r\n   :padding \"0\"\r\n   :border-radius \"1000px\"\r\n   :cursor \"pointer\"\r\n   :place-content \"center\"\r\n   ::stylefy/manual [[:svg {:transition \"all 0.1s ease\"\r\n                            :margin \"0\"}]\r\n                     [:&.is-open [:svg {:transform \"rotate(90deg)\"}]]]})\r\n\r\n\r\n(def sidebar-item-container-style\r\n  {:padding \"0 32px 20px\"\r\n   :line-height \"24px\"\r\n   :font-size \"15px\"\r\n   :position \"relative\"\r\n   :z-index \"1\"\r\n   :width sidebar-width})\r\n\r\n\r\n(def sidebar-item-heading-style\r\n  {:font-size \"16px\"\r\n   :display \"flex\"\r\n   :flex \"0 0 auto\"\r\n   :align-items \"center\"\r\n   :padding \"4px 16px\"\r\n   :position \"sticky\"\r\n   :backdrop-filter \"blur(12px)\"\r\n   :z-index \"10\"\r\n   :background \"#FBFAFA\" ;; FIXME: Replace with weighted-mix color function\r\n   :top \"0\"\r\n   :bottom \"0\"\r\n   ::stylefy/manual [[:h2 {:font-size \"inherit\"\r\n                           :flex \"1 1 100%\"\r\n                           :line-height \"1\"\r\n                           :margin \"0\"\r\n                           :white-space \"nowrap\"\r\n                           :text-overflow \"ellipsis\"\r\n                           :font-weight \"normal\"\r\n                           :max-width \"100%\"\r\n                           :overflow \"hidden\"\r\n                           :align-items \"center\"\r\n                           :color (color :body-text-color)}\r\n                      [:svg {:opacity (:opacity-med OPACITIES)\r\n                             :display \"inline\"\r\n                             :vertical-align \"-4px\"\r\n                             :margin-right \"0.2em\"}]]\r\n                     [:.controls {:display \"flex\"\r\n                                  :flex \"0 0 auto\"\r\n                                  :align-items \"stretch\"\r\n                                  :flex-direction \"row\"\r\n                                  :transition \"opacity 0.3s ease\"\r\n                                  :opacity \"0.25\"}]\r\n                     [:&:hover [:.controls {:opacity \"1\"}]]\r\n                     [:svg {:font-size \"18px\"}]\r\n                     [:hr {:width \"1px\"\r\n                           :background (color :panel-color)\r\n                           :border \"0\"\r\n                           :margin \"4px\"\r\n                           :flex \"0 0 1px\"\r\n                           :height \"1em\"\r\n                           :justify-self \"stretch\"}]\r\n                     [:&.is-open [:h2 {:font-weight \"500\"}]]]})\r\n\r\n\r\n(def empty-message-style\r\n  {:align-self \"center\"\r\n   :display \"flex\"\r\n   :margin \"auto auto\"\r\n   :align-items \"center\"\r\n   :color (color :body-text-color :opacity-med)\r\n   :font-size \"14px\"\r\n   :border-radius \"8px\"\r\n   :line-height 1.3\r\n   ::stylefy/manual [[:p {:max-width \"13em\"}]]})\r\n\r\n\r\n;;; Components\r\n\r\n\r\n(defn empty-message\r\n  []\r\n  [:div (use-style empty-message-style)\r\n   [:p \"Hold shift when clicking a page link to view the page in the sidebar.\"]])\r\n\r\n\r\n(defn right-sidebar-el\r\n  [open? items]\r\n  [:div (use-style sidebar-style {:class (if open? \"is-open\" \"is-closed\")})\r\n   [:div (use-style sidebar-content-style)\r\n    [:header (use-style sidebar-section-heading-style)\r\n     [:h1 \"Pages and Blocks\"]\r\n    ;;  [button {:label [:> mui-icons/FilterList]}]\r\n     ]\r\n    (if (empty? items)\r\n      [empty-message]\r\n      (doall\r\n        (for [[uid {:keys [open node/title block/string]}] items]\r\n          ^{:key uid}\r\n          [:article (use-style sidebar-item-style)\r\n           [:header (use-style sidebar-item-heading-style {:class (when open \"is-open\")})\r\n            [button {:style sidebar-item-toggle-style\r\n                     :on-click-fn #(dispatch [:right-sidebar/toggle-item uid])\r\n                     :class (when open \"is-open\")\r\n                     :label [:> mui-icons/ChevronRight]}]\r\n            [:h2\r\n             (if title\r\n               [:<> [:> mui-icons/Description] title]\r\n               [:<> [:> mui-icons/FiberManualRecord] string])]\r\n            [:div {:class \"controls\"}\r\n        ;;  [button {:label [:> mui-icons/DragIndicator]}]\r\n        ;;  [:hr]\r\n             [button {:on-click-fn #(dispatch [:right-sidebar/close-item uid])\r\n                      :label [:> mui-icons/Close]}]]]\r\n           (when open\r\n             [:div (use-style sidebar-item-container-style)\r\n              (if title\r\n                [node-page-component [:block/uid uid]]\r\n                [block-page-component [:block/uid uid]])])])))]\r\n   [button {:style sidebar-toggle-style\r\n            :class (if open? \"is-open\" \"is-closed\")\r\n            :on-click-fn #(dispatch [:right-sidebar/toggle])\r\n            :label (if open? [:> mui-icons/Close] [:> mui-icons/Add])}]])\r\n\r\n\r\n(defn right-sidebar-component\r\n  []\r\n  (let [open? @(subscribe [:right-sidebar/open])\r\n        items @(subscribe [:right-sidebar/items])]\r\n    [right-sidebar-el open? items]))\r\n\r\n\r\n;;; Devcards\r\n\r\n\r\n;;(defcard-rg Init\r\n;;  [button-primary {:label \"Toggle\" :on-click-fn #(dispatch [:open-in-rightbar \"data\"])}])\r\n\r\n\r\n\r\n(defcard-rg Toggle\r\n  [button-primary {:label \"Toggle\" :on-click-fn #(dispatch [:right-sidebar/toggle])}])\r\n\r\n\r\n(defcard-rg Right-Sidebar\r\n  [:div {:style {:display \"flex\" :height \"60vh\" :justify-content \"flex-end\"}}\r\n   [right-sidebar-component]]\r\n  {:padding false})\r\n"]}